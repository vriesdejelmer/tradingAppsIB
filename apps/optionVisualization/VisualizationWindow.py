# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'optionsGraph.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
from Constants import Constants
from QTGeneration.Visualization_UI import Ui_MainWindow as Visualization_UI
import sys
from Constants import OrderType
from QHelper import Validator, find_nearest
from UIComps.StrikeLineObject import StrikeLineObject
from .OptionPlotWidget import PremiumPlotWidget, PricePlotWidget


class VisualizationWindow(QMainWindow, Visualization_UI):

    no_strike_set = True
    selected_strike = None
    data_exp_mid = None
    data_strike_mid = None
    price = None

    def __init__(self):
        super().__init__()
        QMainWindow.__init__(self)
        Visualization_UI.__init__(self)

        pg.setConfigOption("background", "w")
        self.setupUi(self)

        self.populateBoxes()
        self.setupGraphs()
        self.forceUpperCase()
        self.setupActions()
        self.disableInterface() 
        
    def populateBoxes(self):
        for item in OrderType:
            self.structure_type.addItem(item.value)


    def boxEnabling(self, lower, middle, upper):
        self.upper_box.setEnabled(upper)
        self.middle_box.setEnabled(middle)
        self.lower_box.setEnabled(lower)   


    def setDefaults(self, option_type):
        if option_type == Constants.CALL_TYPE:
            self.call_button.setChecked(True)
        elif option_type == Constants.PUT_TYPE:
            self.put_button.setChecked(True)


    def setupGraphs(self):     

        self.premiumPlot = PremiumPlotWidget(self)
        self.verticalLayout.addWidget(self.premiumPlot)

        self.timeShiftPlot = PricePlotWidget(self)
        self.verticalLayout.addWidget(self.timeShiftPlot)
        
        self.verticalLayout.setStretch(0, 2)
        self.verticalLayout.setStretch(1, 5)
        self.verticalLayout.setStretch(2, 5)


    def forceUpperCase(self):
        self.search_field.setValidator(Validator(self))

        
    def updatePlot(self, data_frames, option_type):
        strike_frame, exp_frame = data_frames
        
        #if not(self.price is None):
        if not(strike_frame is None):
            self.premiumPlot.updatePlot(strike_frame, option_type)
        if not(exp_frame is None):
            self.timeShiftPlot.updatePlot(exp_frame, option_type)

    
    def updatePlotPrice(self, price):
        self.premiumPlot.updatePrice(price)


    def disableInterface(self):
        self.toggleInterface(False)

    def enableInterface(self):
        self.toggleInterface(True)

    def toggleInterface(self, enabled):
        self.middle_box.setEnabled(enabled)
        self.upper_box.setEnabled(enabled)
        self.lower_box.setEnabled(enabled)
        self.expiration_box.setEnabled(enabled)
